By collection I mean a selected triple of dataset/view/issue.
From now on the:

   <col>
   
is a shorthand representing a general collection URL:

   http://cecyf.megivps.pl/api/<format>/dataset/<idef>/view/<idef>/issue/<idef>/

EXAMPLE:
   
   National performance budget 2011 in XML format
   http://cecyf.megivps.pl/api/xml/dataset/0/view/1/issue/2011/

   National istitutional budget 2012 in JSON format
   http://cecyf.megivps.pl/api/json/dataset/0/view/2/issue/2012/
    
All URLs in the API have to contain a trailing slash!


1. The structure of the urls is as follows:
    
   the whole collection:

      <col>/           - a flat list of all entities in a whole collection
      <col>/meta       - metadata for the collection including 'max_level'
      <col>/tree       - the whole collection as a tree
        
   EXAMPLES:

      A flat list of all the entities in the national performance budget 2012
      http://cecyf.megivps.pl/api/json/dataset/0/view/1/issue/2012/  
      
      A tree of all the entities in the national traditional budget 2011
      http://cecyf.megivps.pl/api/xml/dataset/0/view/0/issue/2011/tree  
      

   a single level:

      <col>/a/(<idef>/<level>/)*   - a flat list of all <level> children
                                     of the last specified node


   EXAMPLE:

      A flat list of all tasks in function 1 in the performance budget 2011
      http://cecyf.megivps.pl/api/json/dataset/0/view/1/issue/2012/a/1/b/


   a specified entity:
      
      <col>/(<level>/<idef>/)+         - a specified <idef> entity
      <col>/(<level>/<idef>/)+meta/    - a specified <idef> entity metadata
                                         including children count information
      <col>/(<level>/<idef>/)+tree/    - a subtree of the collection with 
                                         a specified <idef> entity as a root


   <level> is represented by a single letter reflecting a tree level (a, b...)
   <idef> is a unique (in scope of the single collection) id of the entity
    
   EXAMPLES:

      National agencies budget 2011 in JSON
      <col> = http://cecyf.megivps.pl/api/json/dataset/2/view/3/issue/2011/  

      Constant costs of National Film Institute
      <col>/a/21/b/21-1/
      
      All Polish Turistic Organization data as a JSON tree
      <col>/a/13/tree/
      
      Metadata (including children count) for National Film Institute
      <col>/a/21/meta/
      

   In all URLs <idef> can be represented by a single entity idef or as a group 
   expresion. Following keywords are allowed:

      +TO+ - sets a range from one ifed to another
      +AND+ - appends another idef to the list of specified idefs

   To use a scope expresions one follow the syntax:

      <col>/(<level>/<idef>/)*<level>/\[<idef>(\+(AND|TO)\+<idef>)+\]/(<level>)*

   The scope expression can be used only to the deepest level requested.
   The scope expression can be used only for the flat list view.

   EXAMPLES:

      National performance budget 2012 in JSON
      <col> = http://cecyf.megivps.pl/api/json/dataset/0/view/1/issue/2012/  

      A list of functions 1, 2, 3 and 6
      <col>/a/[1+TO+3+AND+6]/

      A list of lists of tasks of functions 1 and 4
      <col>/a/[1+AND+4]/b/

      A list of lists of subtasks of tasks 1-2, 1-3, 1-4 and 1-7 of function 1
      <col>/a/1/b/[1-2+TO+1-4+AND+1-7]/c/


2. Additional GET attribute "fields" can be used to narrow the result's size:

   fields=[field_name(, <field_name>)+] - list of fields of specified entities

   EXAMPLES:
      
      National Health Fund budget 2011 in XML
      <col> = http://cecyf.megivps.pl/api/json/dataset/3/view/1/issue/2012/  

      A list of all entities with only name and toal value as a result:
      <col>/a/?fields=[name, val]

      A list of two regions with idef and total value as a result
      <col>/a/[280000+AND+320000]/?fields=[idef, val]


